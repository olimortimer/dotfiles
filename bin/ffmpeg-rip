#!/usr/bin/env bash

SED_MODIFIER="-r"

if [[ "$OSTYPE" =~ ^darwin ]]; then
    SED_MODIFIER="-E"
fi

AUTOCROP="n"
MAX_WIDTH=""
MAX_HEIGHT=""
PROFILE=""
FF_CRF="19.5"
FF_PRESET="medium"

while [[ $# > 0 ]] ; do
    case "$1" in
        -crop)
            AUTOCROP="y"
        ;;
        -h)
            shift
            MAX_HEIGHT="$1"
        ;;
        -w)
            shift
            MAX_WIDTH="$1"
        ;;
        -crf)
            shift
            FF_CRF="$1"
        ;;
        -preset)
            shift
            FF_PRESET="$1"
        ;;
        *)
            break
        ;;
    esac
    shift
done

if [[ "$1" == '' ]]; then
    echo "No Source specified"
    exit 1
fi

if [[ "$2" == '' ]]; then
    echo "No Destination specified"
    exit 1
fi

if ffmpeg -i "$1" 2>&1 | grep 'Invalid data found' #check if it's video file
then
   echo "$1 is NOT A VALID FILE!"
   exit	   	
fi

VIDEO_DETAILS=$(ffmpeg -i "$1" 2>&1 < /dev/null | grep "Stream #" | grep "Video")

# Grab the width and height of the current video
WIDTH=$(echo "$VIDEO_DETAILS" | sed $SED_MODIFIER 's|^.* ([0-9]+)x[0-9]+[^0-9].*$|\1|g')
HEIGHT=$(echo "$VIDEO_DETAILS" | sed $SED_MODIFIER 's|^.* [0-9]+x([0-9]+)[^0-9].*$|\1|g')

# Find the aspect ratio of the video
RATIO_WIDTH=$(echo "$VIDEO_DETAILS" | sed $SED_MODIFIER 's|^.*DAR ([0-9]+):[0-9]+.*$|\1|g')
RATIO_HEIGHT=$(echo "$VIDEO_DETAILS" | sed $SED_MODIFIER 's|^.*DAR [0-9]+:([0-9]+).*$|\1|g')
ASPECT=$(echo "$RATIO_WIDTH / $RATIO_HEIGHT" | bc -l)

# Calculate the display width if height is preserved
NEW_WIDTH_CALC=$(echo "$HEIGHT * $ASPECT" | bc -l)
NEW_WIDTH=$(printf "%.0f" "$NEW_WIDTH_CALC")
MODULO=$(expr "$NEW_WIDTH" % 2)
NEW_WIDTH=$(expr $NEW_WIDTH + $MODULO)

# Calculate the display height if width is preserved
NEW_HEIGHT_CALC=$(echo "$WIDTH / $ASPECT" | bc -l)
NEW_HEIGHT=$(printf "%.0f" "$NEW_HEIGHT_CALC")
NEW_HEIGHT_MODULO=$(expr "$NEW_HEIGHT" % 2)
NEW_HEIGHT=$(expr $NEW_HEIGHT + $NEW_HEIGHT_MODULO)

if [[ $(echo "if ($ASPECT >= 1.0) 1 else 0" | bc) -eq 1 ]]; then
    FINAL_WIDTH="$WIDTH"
    FINAL_HEIGHT="$NEW_HEIGHT"
else
    FINAL_WIDTH="$NEW_WIDTH"
    FINAL_HEIGHT="$HEIGHT"
fi

if [[ "$MAX_WIDTH" == "" ]]; then
    # Set the max width as the width of the video
    MAX_WIDTH="$FINAL_WIDTH"
fi

if [[ "$MAX_HEIGHT" == "" ]]; then
    # Set the max height as the height of the video
    MAX_HEIGHT="$FINAL_HEIGHT"
fi

# Check the padding. If we are cropping, just ignore the padding
VF_CROP=""
VF_SCALE="scale=iw*min($MAX_WIDTH/iw\,$MAX_HEIGHT/ih):ih*min($MAX_WIDTH/iw\,$MAX_HEIGHT/ih)"
VF_PADDING=",pad=$MAX_WIDTH:$MAX_HEIGHT:($MAX_WIDTH-iw)/2:($MAX_HEIGHT-ih)/2"

if [[ "$AUTOCROP" == "y" ]]; then
    VF_PADDING=""
    
    VF_CROP=",crop=$(ffmpeg -i "$1" -t 1 -vframes 1 -ss 50 -vf "${VF_SCALE},cropdetect=24:8:0" -f null - 2>&1 | grep "crop=" |sed $SED_MODIFIER 's|^.*crop=([0-9]+\:[0-9]+\:[0-9]+\:[0-9]+).*$|\1|g' | tail -1)"
fi

ffmpeg  -threads 0 -y -i "$1" -sn -vf "${VF_SCALE}${VF_CROP}${VF_PADDING}" -c:v libx264 -crf "$FF_CRF" -preset "$FF_PRESET" -profile:v high -level:v 4.1 -c:a libfdk_aac -b:a 256k -ac 2 "$2" < /dev/null;
echo ""